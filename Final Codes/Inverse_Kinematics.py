import xlrd
import matplotlib.pyplot as plt
import csv
import numpy as np
import math
import scipy


# Importing the data file
file=open(r"C:\Users\DELL\Downloads\Step_Swing Trajectory_5ft7in.csv")
csvreader = csv.reader(file)
# Appending the Values of time, Hip Joint Angle (q1) and Knee Joint Angle (q2)
# Here the Ankle Joint is constant 90 Degrees. 
T=[]
Q1=[]
Q2=[]
rows=[]
for row in csvreader:
    rows.append(row)

for i in range(1,282):
    T.append(float(rows[i][0]))
    Q1.append(float(rows[i][1]))
    Q2.append(float(rows[i][2]))
# Length for different parts of the gait
a=43.2 #cm                                                  # Thigh Length
b=49.2 #cm                                                  # Shin Length + Ankle Length 
c=8.6  #cm                                                  # Ankle Length    

# Length of different parts of Foot plate
d=19.5 #cm                                                  # front foot length  
e=26.2 #cm                                                  # Total foot length
f=6.7  #cm                                                  # Back foot length

# Total Height from hip to Ground when leg is straight
Total_H=a+b

# Taking the input coordinates for which we have to calculate the joint angles using inverse Kinematics
Coordinates=[(-0.13716201725177513, -92.4), (-0.29163771266701843, -92.4), (-0.3764244723324133, -92.4), (-0.37594580170153336, -92.4), (-0.37545847479730554, -92.4), (-0.4570535342166657, -92.4), (-0.5384863283222288, -92.4), (-0.5721833838672161, -92.4), (-0.6159100487608846, -92.4), (-0.6971390430207087, -92.4), (-0.778152587725895, -92.4), (-0.8163994718304117, -92.4), (-0.8572733433805269, -92.4), (-0.9347018718730453, -92.4), (-1.0157234404740514, -92.4), (-1.0552405697918807, -92.4), (-1.154554425750824, -92.4), (-1.3553428694176617, -92.4), (-1.5590329898985757, -92.4), (-1.7559660208269499, -92.4), (-1.9460353588155535, -92.4), (-2.0777375671540526, -92.4), (-2.196124507185516, -92.4), (-2.4044551156051206, -92.4), (-2.631232917648237, -92.4), (-2.796517411827402, -92.4), (-2.9621231030816126, -92.4), (-3.1760816417300113, -92.4), (-3.4001483945342805, -92.4), (-3.592831868592274, -92.4), (-3.8014414901214693, -92.4), (-4.13787432613568, -92.4), (-4.466166550494602, -92.4), (-4.689158291960446, -92.4), (-4.899360436529456, -92.4), (-5.128854566890578, -92.4), (-5.358020433634824, -92.4), (-5.500397826288221, -92.4), (-5.64899286478817, -92.4), (-5.9041083333806235, -92.4), (-6.163942837791652, -92.4), (-6.389803243668364, -92.4), (-6.6040417183395554, -92.4), (-6.779389317746681, -92.4), (-6.958172656703365, -92.4), (-7.207414221260308, -92.4), (-7.465365122118968, -92.4), (-7.686696383829812, -92.4), (-7.9061481480401525, -92.4), (-8.138479806230663, -92.4), (-8.386150403974888, -92.4), (-8.693048553648818, -92.4), (-8.982855520052237, -92.4), (-9.174433016562801, -92.4), (-9.372322503391871, -92.4), (-9.600575347523549, -92.4), (-9.841843049905354, -92.4), (-10.101367181074302, -92.4), (-10.362186534669188, -92.4), (-10.632694695687299, -92.4), (-10.913393945254747, -92.4), (-11.199006946650378, -92.4), (-11.489038989083674, -92.4), (-11.766709259187664, -92.4), (-12.031174736636782, -92.4), (-12.303323712717326, -92.4), (-12.58261692842791, -92.4), (-12.860079563745614, -92.4), (-13.138239572723364, -92.4), (-13.411845832398374, -92.4), (-13.690961904077135, -92.4), (-13.970044768099147, -92.4), (-14.226029605309964, -92.4), (-14.445724478023863, -92.4), (-14.668811415242029, -92.4), (-14.942907915220434, -92.4), (-15.257029632987468, -92.4), (-15.581135398568133, -92.4), (-15.869902716993181, -92.4), (-16.096928079560193, -92.4), (-16.31830309356788, -92.4), (-16.643365780605887, -92.4), (-16.98594617254842, -92.4), (-17.245679870982826, -92.4), (-17.463173709517406, -92.4), (-17.644995861836794, -92.3618402303894), (-17.825095223252006, -92.28148907157457), (-18.063855627262065, -92.18478206382993), (-18.282679271095077, -92.0862979480564), (-18.45218035196115, -91.9909691586989), (-18.62412056331592, -91.88977915722538), (-18.784849650686837, -91.78647214822357), (-18.92785194705996, -91.68320751051571), (-19.0494175623017, -91.58152150482783), (-19.168837487646577, -91.47602050313641), (-19.28015180335472, -91.36747988197143), (-19.37789328753839, -91.257366164709), (-19.441193654382584, -91.15003384550538), (-19.483167598269628, -91.04608644827047), (-19.520333077844125, -90.9468089928711), (-19.548750760390522, -90.84795130212834), (-19.587397893853016, -90.74128885669269), (-19.597435259485163, -90.63741055651538), (-19.5635188381273, -90.5395981375938), (-19.52477570915324, -90.43959433685676), (-19.49945679857995, -90.33233849068543), (-19.444467362511734, -90.23329420439845), (-19.336869235932348, -90.15254999920494), (-19.225247057428348, -90.07229627008363), (-19.1742314222386, -89.97448048132914), (-19.125293772352265, -89.87568303108279), (-18.98513797855195, -89.79872286420763), (-18.853130411183823, -89.71913792539462), (-18.77671862088757, -89.62494055919063), (-18.701004539662648, -89.52857411587071), (-18.628170199205083, -89.4285383153086), (-18.532370553452417, -89.33548649218477), (-18.35518694813544, -89.26264837576531), (-18.125544781086234, -89.1983873370086), (-17.869090167711796, -89.13723437545757), (-17.63084576534729, -89.0703351854344), (-17.41059480534205, -89.00642441249437), (-17.206663303296445, -88.93412340324943), (-17.06352784735302, -88.83415142168134), (-16.903279061247947, -88.73364484958982), (-16.692945754135852, -88.6401680303806), (-16.477456739319443, -88.54394655137621), (-16.463678458642114, -88.35467175907398), (-16.503581622653385, -88.13566552807688), (-16.382164754647373, -87.98899196742695), (-16.095560456817623, -87.91926834964313), (-15.726684011401154, -87.90475580347609), (-15.373328637908678, -87.88605534954323), (-14.93713466074736, -87.87938474114034), (-14.516422373597917, -87.86827244169702), (-14.0639296171405, -87.88782528205917), (-13.569014771386415, -87.92481771784509), (-13.138469500516296, -87.92993175009977), (-12.70284976611738, -87.93532665845075), (-12.226393552749068, -87.95709309555545), (-11.68974426500118, -88.0031210259858), (-11.110032589436312, -88.0649101069605), (-10.529998358483514, -88.12334263755875), (-9.950114396340895, -88.17812960683172), (-9.369872026257665, -88.22959751138566), (-8.67159851758868, -88.3069703262597), (-7.927212011491676, -88.39201714785796), (-7.318588240154163, -88.44216799081065), (-6.692828473537666, -88.49464535043643), (-5.917087502983131, -88.57803237883574), (-5.101923151937173, -88.66822167631501), (-4.321819029196281, -88.74957478576874), (-3.552102895688133, -88.83560881342359), (-2.7455952380903046, -88.94144384614725), (-1.9209784141096655, -89.04559248133694), (-1.1259328927925942, -89.12671468284123), (-0.3436608243700565, -89.20459734638501), (0.4575220676471812, -89.29634675976624), (1.3011530007419108, -89.39366983692668), (2.1774323522939767, -89.48865603126066), (3.049755950374964, -89.57442684492126), (3.8460354204641636, -89.64494836907292), (4.615009971388346, -89.7085607704381), (5.4511616894378, -89.77461113476548), (6.346935709091245, -89.8469896190932), (7.304626110574338, -89.9304977196587), (8.243293386506707, -90.00279705455016), (9.122741108680838, -90.05288070881748), (9.984920940907855, -90.09382853712384), (10.750703361378605, -90.13505928829143), (11.484980112419464, -90.17192104937985), (12.29206401885719, -90.19669960078676), (13.196955095605169, -90.21776852006838), (14.28772678900231, -90.22694584231755), (15.419213941095805, -90.22863441683715), (16.46359845582382, -90.2313554144011), (17.486474097919746, -90.2202004999874), (18.511976768924775, -90.19054693357384), (19.45581753347661, -90.14881147389713), (20.25685084647352, -90.1071586440513), (21.010812777771186, -90.0616479682743), (21.76509091083394, -90.00622624448914), (22.502243880271926, -89.94519420779879), (23.160522956848222, -89.89446396636762), (23.798530370900203, -89.84058515368507), (24.50152341628603, -89.75947242231376), (25.169179491059126, -89.67647184232115), (25.76094619451559, -89.60551516378221), (26.350500600121432, -89.52801915047398), (26.961128039239583, -89.43754727889983), (27.5753670834017, -89.33850290054559), (28.161513230436057, -89.23736924359443), (28.774281387092007, -89.12166558808626), (29.452304668476867, -88.98098214795287), (30.133484245211008, -88.83043674493732), (30.808614355914877, -88.6731495588238), (31.46877841154485, -88.51160597845983), (32.039668875595936, -88.37238700398153), (32.594838769136416, -88.23155583833622), (33.21567369901438, -88.05938922460614), (33.84790416710487, -87.87479644184319), (34.47680641438558, -87.68166394629887), (35.06628342225406, -87.4952374027927), (35.59986386028268, -87.32435843311268), (36.10287933502315, -87.15915510408244), (36.594095815460605, -86.99235848532771), (10.876499904284668, -86.8873813184157), (11.351468054730496, -86.98449382143794), (11.825083961215068, -87.07641032242529), (12.290502535633717, -87.16723450989133), (12.731609757099214, -87.25489992932792), (13.123945637306658, -87.33372128637005), (13.484521676316623, -87.40676285684181), (13.851760138725968, -87.47607119606938), (14.184494627372363, -87.5468229418804), (14.417260174304486, -87.62934510701074), (14.590707919673871, -87.71734923671487), (14.753952718042541, -87.80187883599284), (14.907618111355552, -87.88419816082448), (15.046056115420594, -87.96618460486955), (15.216694423224244, -88.03742141518796), (15.401186331521696, -88.09504064398891), (15.532395767318611, -88.15037683339686), (15.642869665702122, -88.20473372114871), (15.726796350179185, -88.25828943168275), (15.770019024058463, -88.31456454091708), (15.826882002314532, -88.36811442211982), (15.916053340875546, -88.41560683009884), (16.005031419347066, -88.46275883147688), (16.09100876797879, -88.50953060432602), (16.167344594207425, -88.55605879882971), (16.213470190111032, -88.60302058753666), (16.20325362117351, -88.65866911650356), (16.11185268485731, -88.73111533388763), (16.015733481434996, -88.80658222934173), (15.971539716919558, -88.87561033277528), (15.930833866367127, -88.9444988443987), (15.887000539026953, -89.01383647196745), (15.816595405185096, -89.08789120197874), (15.73027445127958, -89.16774783313704), (15.634535819175781, -89.24776602680873), (15.51796156293113, -89.32682034865252), (15.401883918365517, -89.405264658323), (15.28993500645538, -89.48253008060543), (15.185998638309927, -89.55794438335327), (15.126886640128877, -89.6253669693515), (15.082224466385846, -89.68996656974414), (14.987057851300744, -89.7628554094586), (14.891152881912276, -89.83593736823678), (14.920486594147267, -89.89138205301862), (14.940935649294953, -89.94857137407197), (14.76564602552212, -90.03268574802415), (14.59475857361279, -90.1163713158305), (14.513718863955113, -90.18826176359838), (14.43267942966534, -90.25951663648394), (14.351616577300337, -90.33013326707524), (14.270382309389822, -90.40013256940045), (14.194114981338032, -90.46878661979879), (14.094984628576494, -90.5405818436402), (13.975545585622005, -90.61778843478105), (13.87510243892324, -90.69418424296428), (13.796286509495893, -90.7675252499827), (13.718692743860162, -90.83973677198998), (13.59873478556128, -90.9133356310922), (13.500214576259136, -90.98499658812628), (13.396484824555737, -91.06129169472686), (13.277116838257516, -91.13844910989826), (13.231594193185678, -91.2035151312053), (13.196543400055287, -91.26576174315358), (13.081456574235803, -91.33815225053469), (12.97866231096784, -91.40714011424507), (12.907149603928577, -91.45962316549041), (12.839567005561392, -91.50011723905942), (12.841827881679883, -91.53026440950443), (12.834333029676383, -91.56178920350816), (12.79292537968781, -91.59805886274275), (12.75155498720678, -91.63431116366144), (12.736951623182687, -91.66857127274766), (12.730507112597223, -91.70220614736566), (12.700180744832622, -91.7375797676347), (12.657451306644475, -91.77384663628263)]
x_cordinate=[x[0] for x in Coordinates]                     # taking x-coordinates
New_Low_Point=[x[1] for x in Coordinates]                   # taking the Lowest Point (either heel or toe)
for i in range(281):
    New_Low_Point[i]-=2.5*np.sin(((np.pi/2.8)*i)/100)       # Considering the movement of Torso (Hip Movement)

# Making lists for calculating joint Angles
q1_new=[]
q2_new=[]
q2_Final=[]

# To calculate the joint Angles Geometry was Applied, Refer to Figure 1(a), Figure 1(b) for briefly understanding the angles.
alpha=np.arctan2(d,b)
beta=np.arctan2(f,b)

# Here we Calculate Joint Angles for the Final Iteration GIF(3), by noting the point from which the lowest point is heel instead of toe 
## When the Toe is the lowest point in the Gait trajectory
for i in range(206):
    cos = (x_cordinate[i]*x_cordinate[i] + New_Low_Point[i]*New_Low_Point[i] - a**2 - (b**2+d**2))/(2*a*math.sqrt(b**2+d**2))
    cos = 1 if cos>1 else cos
    cos = -1 if cos<-1 else cos
    q2_new.append(np.arccos(cos))
    q1_new.append(np.arctan2(New_Low_Point[i],x_cordinate[i]) - np.arctan2((a + math.sqrt(b**2+d**2)*np.cos(q2_new[i])),math.sqrt(b**2+d**2)*np.sin(q2_new[i])))
    q2_Final.append(q2_new[i]+alpha)
## When the Heel is the lowest point in the Gait trjaectory
for i in range(206,281):
    cos = (x_cordinate[i]*x_cordinate[i] + New_Low_Point[i]*New_Low_Point[i] - a**2 - (b**2+f**2))/(2*a*math.sqrt(b**2+f**2))
    cos = 1 if cos>1 else cos
    cos = -1 if cos<-1 else cos
    q2_new.append(np.arccos(cos))
    q1_new.append(np.arctan2(New_Low_Point[i],x_cordinate[i]) - np.arctan2((a + math.sqrt(b**2+f**2)*np.cos(q2_new[i])),math.sqrt(b**2+f**2)*np.sin(q2_new[i])))
    q2_Final.append(q2_new[i]-beta)
print(q1_new)                                               # Final Q1 (Hip Joint Angle) 
print(q2_Final)                                             # Final Q2 (Knee Joint Angle)
